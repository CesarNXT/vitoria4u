# Script de Testes de Seguranca
# Testa todos os 8 problemas criticos corrigidos

Write-Host ""
Write-Host "=====================================" -ForegroundColor Cyan
Write-Host " TESTES DE SEGURANCA - 8 CRITICOS" -ForegroundColor Cyan
Write-Host "=====================================" -ForegroundColor Cyan
Write-Host ""

# =============================================================================
# TESTE 2: API de Pagamento SEM Token (deve retornar 401)
# =============================================================================
Write-Host "[TESTE 2] API de Pagamento sem Token" -ForegroundColor Yellow
Write-Host "Esperado: 401 Unauthorized" -ForegroundColor Gray
Write-Host ""

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000/api/pagamentos/mercado-pago" `
        -Method POST `
        -Body '{"planId":"plano_basico"}' `
        -ContentType "application/json" `
        -ErrorAction Stop
    
    Write-Host "[FALHOU] API aceitou requisicao sem token (codigo: $($response.StatusCode))" -ForegroundColor Red
} catch {
    if ($_.Exception.Response.StatusCode.value__ -eq 401) {
        Write-Host "[PASSOU] API rejeitou corretamente (401 Unauthorized)" -ForegroundColor Green
    } else {
        Write-Host "[ERRO] Codigo inesperado: $($_.Exception.Response.StatusCode.value__)" -ForegroundColor Yellow
    }
}

# =============================================================================
# TESTE 2B: API de Pagamento com Token INV√ÅLIDO (deve retornar 401)
# =============================================================================
Write-Host "`nüî¥ TESTE 2B: API de Pagamento com Token Inv√°lido" -ForegroundColor Yellow
Write-Host "Esperado: 401 Unauthorized`n" -ForegroundColor Gray

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000/api/pagamentos/mercado-pago" `
        -Method POST `
        -Headers @{ "Authorization" = "Bearer token_falso_123" } `
        -Body '{"planId":"plano_basico"}' `
        -ContentType "application/json" `
        -ErrorAction Stop
    
    Write-Host "‚ùå FALHOU - API aceitou token inv√°lido (c√≥digo: $($response.StatusCode))" -ForegroundColor Red
} catch {
    if ($_.Exception.Response.StatusCode.value__ -eq 401) {
        Write-Host "‚úÖ PASSOU - API rejeitou token inv√°lido (401 Unauthorized)" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è ERRO INESPERADO - C√≥digo: $($_.Exception.Response.StatusCode.value__)" -ForegroundColor Yellow
    }
}

# =============================================================================
# TESTE 3: Upload SEM Token (deve retornar 401)
# =============================================================================
Write-Host "`nüî¥ TESTE 3: Upload sem Token" -ForegroundColor Yellow
Write-Host "Esperado: 401 Unauthorized`n" -ForegroundColor Gray

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000/api/upload" `
        -Method POST `
        -Body "test" `
        -ContentType "multipart/form-data" `
        -ErrorAction Stop
    
    Write-Host "‚ùå FALHOU - Upload aceitou requisi√ß√£o sem token (c√≥digo: $($response.StatusCode))" -ForegroundColor Red
} catch {
    if ($_.Exception.Response.StatusCode.value__ -eq 401) {
        Write-Host "‚úÖ PASSOU - Upload rejeitou corretamente (401 Unauthorized)" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è ERRO INESPERADO - C√≥digo: $($_.Exception.Response.StatusCode.value__)" -ForegroundColor Yellow
    }
}

# =============================================================================
# TESTE 6: APIs Admin SEM Token (deve retornar 401)
# =============================================================================
Write-Host "`nüî¥ TESTE 6: API Admin sem Token" -ForegroundColor Yellow
Write-Host "Esperado: 401 Unauthorized`n" -ForegroundColor Gray

try {
    $response = Invoke-WebRequest -Uri "http://localhost:3000/api/admin/seed-plans" `
        -Method GET `
        -ErrorAction Stop
    
    Write-Host "‚ùå FALHOU - API admin aceitou requisi√ß√£o sem token (c√≥digo: $($response.StatusCode))" -ForegroundColor Red
} catch {
    if ($_.Exception.Response.StatusCode.value__ -eq 401) {
        Write-Host "‚úÖ PASSOU - API admin rejeitou corretamente (401 Unauthorized)" -ForegroundColor Green
    } else {
        Write-Host "‚ö†Ô∏è ERRO INESPERADO - C√≥digo: $($_.Exception.Response.StatusCode.value__)" -ForegroundColor Yellow
    }
}

# =============================================================================
# RESUMO
# =============================================================================
Write-Host "`n" -NoNewline
Write-Host "=" -NoNewline -ForegroundColor Cyan
Write-Host " RESUMO DOS TESTES " -NoNewline -ForegroundColor Cyan
Write-Host "=" -ForegroundColor Cyan
Write-Host "‚úÖ Teste 1: Webhook com assinatura - J√Å VALIDADO ANTERIORMENTE" -ForegroundColor Green
Write-Host "‚úÖ Teste 2: API de pagamento protegida - Veja resultados acima" -ForegroundColor Green
Write-Host "‚úÖ Teste 3: Upload protegido - Veja resultados acima" -ForegroundColor Green
Write-Host "‚úÖ Teste 6: APIs admin protegidas - Veja resultados acima" -ForegroundColor Green
Write-Host "`nüìù Testes 4, 5, 7 e 8 requerem verifica√ß√£o manual (instru√ß√µes abaixo)`n" -ForegroundColor Yellow

Write-Host "=" -ForegroundColor Cyan
Write-Host " PR√ìXIMOS TESTES MANUAIS " -ForegroundColor Cyan
Write-Host "=" -ForegroundColor Cyan
Write-Host ""
Write-Host "üß™ TESTE 4: Valida√ß√£o de Expira√ß√£o" -ForegroundColor Cyan
Write-Host "   1. V√° ao Firebase Console" -ForegroundColor Gray
Write-Host "   2. Edite seu usu√°rio e mude 'access_expires_at' para uma data passada" -ForegroundColor Gray
Write-Host "   3. Tente usar uma feature do sistema" -ForegroundColor Gray
Write-Host "   4. Deve ser bloqueado" -ForegroundColor Gray
Write-Host ""
Write-Host "üß™ TESTE 5: Build do Projeto" -ForegroundColor Cyan
Write-Host "   Execute: npm run build" -ForegroundColor Gray
Write-Host "   Deve compilar sem erros TypeScript/ESLint" -ForegroundColor Gray
Write-Host ""
Write-Host "üìù TESTE 7: Impersona√ß√£o" -ForegroundColor Cyan
Write-Host "   Status: API criada, valida√ß√£o completa pendente (n√£o bloqueante)" -ForegroundColor Gray
Write-Host ""
Write-Host "üìù TESTE 8: Seguran√ßa Dashboard" -ForegroundColor Cyan
Write-Host "   Status: Documentado para reativa√ß√£o futura (n√£o bloqueante)" -ForegroundColor Gray
Write-Host ""
