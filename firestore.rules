rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    
    // ğŸ”§ FunÃ§Ã£o helper para verificar se Ã© admin
    function isAdmin() {
      return request.auth != null && 
             exists(/databases/$(database)/documents/admin/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/admin/$(request.auth.uid)).data.isAdmin == true;
    }
    
    // ğŸ‘‘ ADMIN TEM ACESSO TOTAL A TUDO
    // Firestore bloqueia tudo por padrÃ£o, nÃ£o precisa de regra de bloqueio explÃ­cita
    match /{document=**} {
      allow read, write: if isAdmin();
    }
    
    // âœ… NegÃ³cios - Leitura pÃºblica (pÃ¡gina de agendamento) / Escrita para dono ou admin
    match /negocios/{businessId} {
      // Permitir leitura pÃºblica dos dados bÃ¡sicos do negÃ³cio
      allow read: if true;
      
      // Permitir escrita para o dono OU admin
      allow write: if request.auth != null && (request.auth.uid == businessId || isAdmin());
      
      // ğŸ“… Agendamentos - Leitura pÃºblica (ver horÃ¡rios) / Escrita dono ou admin
      match /agendamentos/{appointmentId} {
        allow read: if true; // PÃºblico para ver disponibilidade
        allow write: if request.auth != null && (request.auth.uid == businessId || isAdmin());
      }
      
      // ğŸ‘¥ Clientes - Apenas dono ou admin (dados sensÃ­veis)
      match /clientes/{clientId} {
        allow read, write: if request.auth != null && (request.auth.uid == businessId || isAdmin());
      }
      
      // ğŸ’‡ ServiÃ§os - Leitura pÃºblica (pÃ¡gina de agendamento) / Escrita dono ou admin
      match /servicos/{serviceId} {
        allow read: if true; // PÃºblico para ver serviÃ§os disponÃ­veis
        allow write: if request.auth != null && (request.auth.uid == businessId || isAdmin());
      }
      
      // ğŸ‘” Profissionais - Leitura pÃºblica (pÃ¡gina de agendamento) / Escrita dono ou admin
      match /profissionais/{professionalId} {
        allow read: if true; // PÃºblico para ver profissionais
        allow write: if request.auth != null && (request.auth.uid == businessId || isAdmin());
      }
      
      // ğŸš« Datas Bloqueadas - Leitura pÃºblica (verificar disponibilidade) / Escrita dono ou admin
      match /datasBloqueadas/{blockId} {
        allow read: if true; // PÃºblico para verificar datas bloqueadas
        allow write: if request.auth != null && (request.auth.uid == businessId || isAdmin());
      }
      
      // ğŸ“¢ Campanhas - Apenas dono ou admin
      match /campanhas/{campaignId} {
        allow read, write: if request.auth != null && (request.auth.uid == businessId || isAdmin());
      }
    }
    
    // âœ… Admin - Dados administrativos
    match /admin/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if false; // Apenas via Firebase Admin SDK
    }
    
    // âœ… Planos - Leitura pÃºblica (pÃ¡gina de planos) / Escrita apenas admin
    match /planos/{planId} {
      allow read: if true;
      allow write: if isAdmin(); // Admin pode editar via interface
    }
  }
}